def select(
        table_name: str,
        second_table_name: str = None,
        first_table_join_column: str = None,
        second_table_join_column: str = None,
        columns: list = None,
        criteria = {}, 
        order_by = None,
        ordered_descending: bool = False 
        ):
        '''
        Takes in a table name and optionally a criteria as a dictionary, a column to order by and a boolean 
        flag to order it by that column descending or not 
        '''

        select_criteria_values = tuple(criteria.values())
        if columns:
            select_columns = ', '.join(columns)
            query = f'SELECT {select_columns} FROM {table_name}'
        else:
            query = f'SELECT * from {table_name}'
        if second_table_name:
            query += f' JOIN {second_table_name} on {table_name}.{first_table_join_column} = {second_table_name}.{second_table_join_column}'
        if criteria:
            placeholders = [f'{column} = ?' for column in criteria.keys()]
            select_criteria = " AND ".join(placeholders)
            query = query + f' WHERE {select_criteria}'
        if order_by:
            query = query + f' ORDER BY {order_by}'
            if ordered_descending:
                query = query + ' DESC'
        query = query + ';'
        return query

print(select( table_name = 'items', second_table_name = 'details', first_table_join_column = 'id', second_table_join_column='product_id',
                columns= ['id', 'stock', 'name', 'ring', 'length_', 'origin'], criteria= {id : 7}))